class Node:
    def __init__(self,data=None):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def getData(self):
        current_node = self.head
        while current_node is not None:
            print(current_node.data)
            current_node = current_node.next
    def insertAtBeg(self,data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def insertAtEnd(self,data):
        new_node =Node(data)
        current_node = self.head
        while current_node.next is not None:
            current_node = current_node.next

        current_node.next = new_node
        
    def insertAtMiddle(self,data,pos):
        new_Node  =Node(data)
        current_node = self.head
        count = 0
        while count < pos:
            count = count+1
            current_node = current_node.next
        print(count)
        new_Node.next = current_node.next
        current_node.next = new_Node
                          

    
if __name__ == "__main__":
    llist  = LinkedList()
    e1 = Node('MONDAY')
    llist.head = e1
    e2 = Node("TUESDAY")
    llist.head.next = e2
    e3 = Node('WEDNESDAY')
    e2.next = e3
    llist.insertAtBeg('SUNDAY')
    llist.insertAtEnd('FRIDAY')
    llist.insertAtMiddle('THURSDAY',3)
    llist.getData()
